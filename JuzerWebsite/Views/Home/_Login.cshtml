@model ViewModel.UserLoginVM

<div id="cd-login">
    <form class="cd-form" id="cd-form-Login">
        <p class="fieldset">
            <label class="image-replace cd-email" for="Email">
                E-mail
            </label>
            @*<input class="full-width has-padding has-border" id="signin-email" type="email" placeholder="E-mail">
            <span class="cd-error-message">Error message here!</span>*@
            @Html.TextBoxFor(x => x.Email, new { @class = "full-width has-padding has-border" })
            @Html.ValidationMessageFor(x => x.Email, null, new { @class = "cd-error-message" })
        </p>
        <p class="fieldset">
            <label class="image-replace cd-password" for="Password">
                Password
            </label>
            @*<input class="full-width has-padding has-border" id="signin-password" type="text"
                   placeholder="Password">
            <a href="#0" class="hide-password">Hide</a> <span class="cd-error-message">
                Error message
                here!
            </span>*@
            @Html.TextBoxFor(x => x.Password, new { @class = "full-width has-padding has-border" })
            <a href="#0" class="hide-password">Hide</a>
            @Html.ValidationMessageFor(x => x.Password, null, new { @class = "cd-error-message" })
        </p>
        <p class="fieldset">
            <input type="checkbox" id="remember-me" checked>
            <label for="remember-me">
                Remember me
            </label>
        </p>
        <p class="fieldset">
            @*    <input class="full-width" type="submit" value="Login">*@
            @*<button type="submit" id="btnLogin" class="full-width">Login</button>*@
            <button id="btnLogin" class="full-width">Login</button>
        </p>
    </form>
    <p class="cd-form-bottom-message">
        <a href="#0">Forgot your password?</a>
    </p>
    <!-- <a href="#0" class="cd-close-form">Close</a> -->
</div>
